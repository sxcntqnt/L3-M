name: Diago Verification

on:
  push:
    branches:
      - main
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * 0'  # 📅 Runs every Sunday at midnight UTC

permissions:
  contents: write

env:
  OUTPUT_DIR: EMC

jobs:
  run-diago:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go 🛠️
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules ⚡
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Prepare Go modules 📦
        run: |
          if [ ! -f go.mod ]; then
            go mod init diago
          fi
          go get gopkg.in/yaml.v3@v3.0.1
          go mod tidy

      - name: Ensure output directory exists 📁
        run: mkdir -p $OUTPUT_DIR

      - name: Run Diago 🚀
        run: |
          set -e
          if [ ! -d "$OUTPUT_DIR" ] || [ -z "$(ls -A $OUTPUT_DIR)" ]; then
            echo "📁 $OUTPUT_DIR directory not found or empty – running in auto mode"
            go run main.go --mode=auto --bookies-file=bookies.txt --output-dir=$OUTPUT_DIR
          else
            echo "📁 $OUTPUT_DIR directory found – running in fetch mode with baking"
            go run main.go --mode=fetch --bookies-file=bookies.txt --output-dir=$OUTPUT_DIR --bake-overrides
          fi

      - name: Create latest report snippet 📄
        run: |
          awk '/## 📊 Summary/,0' $OUTPUT_DIR/report.md > $OUTPUT_DIR/latest_report.md
          echo "" >> $OUTPUT_DIR/latest_report.md
          echo "_Updated automatically via GitHub Actions_" >> $OUTPUT_DIR/latest_report.md

      - name: Commit updated configs and reports 📝
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add $OUTPUT_DIR
          if ! git diff --cached --quiet; then
            git commit -m "chore: update generated configs and bookie reports"
            git push
          else
            echo "✅ No changes to commit"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish report to Wiki 📚
        uses: ./.github/actions/publish-wiki
        with:
          output-dir: ${{ env.OUTPUT_DIR }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

