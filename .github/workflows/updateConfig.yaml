name: Update Configs

on:
  push:
    branches:
      - secondary

  schedule:
    - cron: "0 1 * * *"   # run every day at 01:00 UTC

  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write   # required to comment on PRs

jobs:
  update-configs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run Go program
        run: |
          go run diago.go

      - name: Check for changes in EMC/
        run: |
          if git diff --quiet EMC/; then
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "Changes detected in EMC/"
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git add EMC/
            git commit -m "chore: update configs in EMC/"
            git push origin secondary
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Create pull request
        if: env.changes == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update EMC configs - $(date +'%Y-%m-%d %H:%M UTC')"
          body: "Automated update of configuration files in EMC/"
          base: "main"
          head: "secondary"

      - name: Add PR comment with details
        if: steps.cpr.outputs.pull-request-number
        run: |
          echo "### Config changes detected" > pr_comment.md
          echo "" >> pr_comment.md
          echo "Generated by \`go run diago.go\`" >> pr_comment.md
          echo "" >> pr_comment.md
          echo "#### Diff:" >> pr_comment.md
          echo "\`\`\`diff" >> pr_comment.md
          git diff HEAD^ HEAD EMC/ >> pr_comment.md
          echo "\`\`\`" >> pr_comment.md

          gh pr comment ${{ steps.cpr.outputs.pull-request-number }} \
            --body-file pr_comment.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
