name: Run Diago Verification

on:
  push:
    branches:
      - main
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * 0'  # Weekly run Sunday midnight UTC

permissions:
  contents: write

jobs:
  run-diago:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Prepare Go modules
        run: |
          if [ ! -f go.mod ]; then
            go mod init diago
          fi
          go get gopkg.in/yaml.v3
          go mod tidy

      - name: Ensure output directory exists
        run: mkdir -p EMC

      - name: Run Diago (generate & fetch)
        run: |
          go run main.go --bookies-file=bookies.txt --output-dir=EMC

      - name: Create latest report snippet
        run: |
          awk '/## ðŸ“Š Summary/,0' EMC/report.md > EMC/latest_report.md
          echo "" >> EMC/latest_report.md
          echo "_Updated automatically via GitHub Actions_" >> EMC/latest_report.md

      - name: Commit updated configs and reports
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add EMC
          if ! git diff --cached --quiet; then
            git commit -m "chore: update generated configs and bookie reports"
            git push
          else
            echo "âœ… No changes to commit"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish latest report to Wiki with history
        run: |
          WIKI_REPO="${GITHUB_REPOSITORY}.wiki.git"
          TMP_WIKI=$(mktemp -d)
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M')

          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${WIKI_REPO} $TMP_WIKI

          awk '/## ðŸ“Š Summary/,0' EMC/report.md > $TMP_WIKI/Latest_Report.md
          echo "" >> $TMP_WIKI/Latest_Report.md
          echo "_Updated automatically via GitHub Actions_" >> $TMP_WIKI/Latest_Report.md

          mkdir -p $TMP_WIKI/history/$TIMESTAMP
          cp EMC/report.md EMC/report.json $TMP_WIKI/history/$TIMESTAMP/

          HOME_FILE="$TMP_WIKI/Home.md"
          echo "# Bookie Reports Dashboard" > $HOME_FILE
          echo "" >> $HOME_FILE
          echo "## Latest Report" >> $HOME_FILE
          echo "- [Latest Report](Latest_Report.md)" >> $HOME_FILE
          echo "" >> $HOME_FILE
          echo "## Historical Reports" >> $HOME_FILE

          for report_dir in $(ls -1 $TMP_WIKI/history | sort -r); do
            echo "- [$report_dir](history/$report_dir/report.md)" >> $HOME_FILE
          done

          echo "" >> $HOME_FILE
          echo "_Updated automatically via GitHub Actions_" >> $HOME_FILE

          cd $TMP_WIKI
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          git add Latest_Report.md history/$TIMESTAMP Home.md
          if git diff --cached --quiet; then
            echo "No changes for Wiki"
          else
            git commit -m "Update latest report + history - $TIMESTAMP"
            git push
          fi
