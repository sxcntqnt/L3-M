#!/bin/bash
set -e

# Default output directory if not provided
OUTPUT_DIR="${OUTPUT_DIR:-EMC}"
WIKI_REPO="${GITHUB_REPOSITORY}.wiki.git"
TMP_WIKI=$(mktemp -d)
TIMESTAMP=$(date +'%Y-%m-%d_%H-%M')
BRANCH_NAME="${GITHUB_REF_NAME:-unknown}"

# Validate inputs
if [ ! -f "$OUTPUT_DIR/report.md" ] || [ ! -f "$OUTPUT_DIR/report.json" ]; then
  echo "‚ùå Error: report.md or report.json not found in $OUTPUT_DIR"
  exit 1
fi

if [ -z "$GH_TOKEN" ]; then
  echo "‚ùå Error: GH_TOKEN environment variable not set"
  exit 1
fi

echo "üì¶ Cloning wiki repository..."
git clone "https://x-access-token:${GH_TOKEN}@github.com/${WIKI_REPO}" "$TMP_WIKI" || {
  echo "‚ùå Error: Failed to clone wiki repository"
  exit 1
}

# Create Latest_Report.md with enhanced formatting
{
  echo "# üìä Latest Bookie Report"
  echo ""
  echo "**Generated on**: $TIMESTAMP (Branch: $BRANCH_NAME)"
  echo ""
  echo "> This report summarizes the latest Diago verification results. See [Historical Reports](Home.md#historical-reports) for past runs."
  echo ""
  awk '/## üìä Summary/,0' "$OUTPUT_DIR/report.md"
  echo ""
  echo "---"
  echo "*Updated automatically via GitHub Actions* | [Home](Home.md) | [Historical Reports](Home.md#historical-reports) | [Workflow Details](Workflows.md)"
} > "$TMP_WIKI/Latest_Report.md"

# Archive full report and JSON in history
mkdir -p "$TMP_WIKI/history/$TIMESTAMP"
cp "$OUTPUT_DIR/report.md" "$OUTPUT_DIR/report.json" "$TMP_WIKI/history/$TIMESTAMP/" || {
  echo "‚ùå Error: Failed to copy report files to history/$TIMESTAMP"
  exit 1
}

# Create enhanced Home.md
HOME_FILE="$TMP_WIKI/Home.md"
{
  echo "# üìà Bookie Reports Dashboard"
  echo ""
  echo "Welcome to the **Bookie Reports Dashboard**! üöÄ"
  echo "This page provides access to the latest and historical reports generated by the Diago verification tool."
  echo ""
  echo "[![Workflow Status](https://github.com/${GITHUB_REPOSITORY}/actions/workflows/publish-wiki.yml/badge.svg)](https://github.com/${GITHUB_REPOSITORY}/actions/workflows/publish-wiki.yml)"
  echo ""
  echo "## üìã Latest Report"
  echo "- [Latest Report (Updated $TIMESTAMP from $BRANCH_NAME)](Latest_Report.md)"
  echo ""
  echo "## üìö Historical Reports"
  echo "| Date | Branch | Report | JSON |"
  echo "|------|--------|--------|------|"
  for report_dir in $(ls -1 "$TMP_WIKI/history" | sort -r); do
    echo "| $report_dir | $BRANCH_NAME | [View Report](history/$report_dir/report.md) | [View JSON](history/$report_dir/report.json) |"
  done
  echo ""
  echo "## ‚ÑπÔ∏è About"
  echo "Learn more about the workflows and composite action generating these reports in [Workflow Details](Workflows.md)."
  echo ""
  echo "---"
  echo "*Maintained by GitHub Actions | Last updated: $TIMESTAMP*"
} > "$HOME_FILE"

# Create Workflows.md with updated documentation
WORKFLOWS_FILE="$TMP_WIKI/Workflows.md"
{
  echo "# üõ†Ô∏è Workflow Documentation"
  echo ""
  echo "This page explains the GitHub Actions workflows and composite action that generate and publish the **Bookie Reports Dashboard**."
  echo ""
  echo "## 1. Diago Verification"
  echo "- **Purpose**: Runs the Diago tool on the \`main\` branch, commits reports to \`EMC/\`."
  echo "- **Triggers**: Push to \`main\`, manual dispatch, or weekly on Sundays at midnight UTC."
  echo "- **Outputs**: Reports in \`EMC/report.md\`, \`EMC/report.json\`, and \`EMC/latest_report.md\`."
  echo ""
  echo "## 2. Update Configs"
  echo "- **Purpose**: Runs the Diago tool on the \`secondary\` branch, commits to \`secondary\`, and creates a pull request to \`main\`."
  echo "- **Triggers**: Push to \`secondary\`, daily at 01:00 UTC, or manual dispatch."
  echo "- **Outputs**: Updated reports in \`EMC/\` and a pull request with diff comments."
  echo ""
  echo "## 3. Publish to Wiki"
  echo "- **Purpose**: Updates the wiki with the latest report, historical archives, and this documentation using a composite action."
  echo "- **Triggers**: Changes to \`EMC/\` on any branch or manual dispatch."
  echo "- **Composite Action**: The wiki publishing logic is encapsulated in a reusable composite action (\`entrypoint.sh\`)."
  echo "- **Outputs**:"
  echo "  - \`Home.md\`: Dashboard with links to latest and historical reports."
  echo "  - \`Latest_Report.md\`: Summary of the latest report."
  echo "  - \`history/YYYY-MM-DD_HH-MM/\`: Archived reports and JSON data."
  echo "  - \`Workflows.md\`: This documentation page."
  echo ""
  echo "## üîß Prerequisites"
  echo "- **GitHub Token**: Required for repository, pull request, and wiki access (set as \`GH_TOKEN\`)."
  echo "- **Go Application**: \`main.go\` with support for \`--mode=auto\` and \`--mode=fetch\`."
  echo "- **Wiki Enabled**: Repository wiki must be enabled."
  echo "- **Bookies File**: \`bookies.txt\` for Diago input."
  echo "- **Composite Action**: The \`publish-wiki\` action must be configured in the repository."
  echo ""
  echo "## üìã Composite Action Details"
  echo "The \`publish-wiki\` composite action (\`entrypoint.sh\`) handles wiki updates, ensuring consistent formatting and navigation across pages."
  echo "- **Inputs**:"
  echo "  - \`OUTPUT_DIR\`: Directory containing report files (default: \`EMC\`)."
  echo "  - \`GH_TOKEN\`: GitHub token for wiki access."
  echo "- **Outputs**: Updated wiki pages (\`Home.md\`, \`Latest_Report.md\`, \`Workflows.md\`, and historical archives)."
  echo ""
  echo "---"
  echo "*Generated by GitHub Actions | Last updated: $TIMESTAMP*"
} > "$WORKFLOWS_FILE"

# Commit and push changes
cd "$TMP_WIKI"
git config --local user.name "github-actions[bot]"
git config --local user.email "github-actions[bot]@users.noreply.github.com"

git add Latest_Report.md "history/$TIMESTAMP" Home.md Workflows.md

if git diff --cached --quiet; then
  echo "‚úÖ No changes for Wiki"
else
  git commit -m "Update latest report, history, and documentation - $TIMESTAMP"
  git push || {
    echo "‚ùå Error: Failed to push to wiki repository"
    exit 1
  }
  echo "üöÄ Wiki updated successfully"
fi

